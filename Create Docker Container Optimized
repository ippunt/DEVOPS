https://medium.com/the-agile-crafter/docker-image-optimization-from-1-16gb-to-22-4mb-53fdb4c53311


cat demo-docker
FROM node:10

WORKDIR /app
COPY app /app
RUN npm install -g webserver.local
RUN npm install && npm run build

EXPOSE 3000
CMD webserver.local -d ./build
EOF

docker images demo-docker;    shows us the size if 1.16G
____________________________________________________________________________________________

cat demo-docker2
FROM node:10-alpine

WORKDIR /app
COPY app /app
RUN npm install -g webserver.local
RUN npm install && npm run build

EXPOSE 3000
CMD webserver.local -d ./build
EOF
docker images demo-docker2;  336MB is the size
____________________________________________________________________________________________


cat demo-docker3
FROM node:10-alpine AS build
WORKDIR /app
COPY app /app
RUN npm install && npm run build


FROM node:10-alpine
WORKDIR /app
RUN npm install -g webserver.local
COPY --from=build /app/build ./build
EXPOSE 3000
CMD webserver.local -d ./build
EOF
docker images demo-docker3;  91.5 MB
____________________________________________________________________________________________

Running server side Javascript from the node container is not the most efficient way about going about this
cat demo-docker4 
FROM node:10-alpine AS build
WORKDIR /app
COPY app /app
RUN npm install && npm run build


FROM nginx:stable-alpine
COPY --from=build /app/build /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
EOF
docker images demo-docker4;  This container is 22.4 MB... LightWeight
